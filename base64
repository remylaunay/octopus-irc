#!/usr/bin/env ruby

# Based on answer found here:
# http://stackoverflow.com/questions/7618598/unpack-base64-encoded-32bit-integer-representing-ip-address

require 'base64'

class App
  def run(arg)
    ip2base64(arg)
  end

  def ip2base64(ip_string)
    ip_array = ip_string.split('.').map { |_| _.to_i } # => [204, 152, 222, 180]
    ip_packed = ip_array.pack("C*") # => "\xCC\x98\xDE\xB4"
    ip_encoded = Base64.encode64(ip_packed) # => "zJjetA==\n"
    puts ip_encoded
    return 0
  end
end

if ARGV.size == 1
  App.new.run ARGV[0]
else
  puts "Usage: #{File.basename($0)} ip-address"
end
